name: Deploy to Testnet

on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: testnet

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/testnet
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TESTNET }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan -out=tfplan
      
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
      
      - name: Save outputs
        run: terraform output -json > outputs.json
      
      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: terraform/environments/testnet/outputs.json

  deploy-contracts:
    name: Deploy Contracts
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Deploy L1 contracts to Base Sepolia
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY_TESTNET }}
          DEPLOYER_ADDRESS: ${{ secrets.DEPLOYER_ADDRESS }}
          L1_RPC_URL: https://sepolia.base.org
          L1_CHAIN_ID: 84532
          BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}
        run: bun run deploy:testnet
      
      - name: Verify contracts on BaseScan
        env:
          BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}
        run: bun run verify:testnet
      
      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-deployments
          path: contracts/deployments/testnet/

  deploy-kubernetes:
    name: Deploy Kubernetes Services
    runs-on: ubuntu-latest
    needs: [deploy-infrastructure, deploy-contracts]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TESTNET }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Download Terraform outputs
        uses: actions/download-artifact@v4
        with:
          name: terraform-outputs
      
      - name: Download contract deployments
        uses: actions/download-artifact@v4
        with:
          name: contract-deployments
          path: contracts/deployments/testnet/
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name jeju-testnet
      
      - name: Create Kubernetes namespaces
        run: |
          kubectl create namespace op-stack --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace execution --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace da --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace explorer --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace observability --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace infra --dry-run=client -o yaml | kubectl apply -f -
      
      - name: Install Helmfile
        run: |
          wget https://github.com/helmfile/helmfile/releases/download/v0.162.0/helmfile_0.162.0_linux_amd64.tar.gz
          tar -xzf helmfile_0.162.0_linux_amd64.tar.gz
          sudo mv helmfile /usr/local/bin/
      
      - name: Deploy Helm charts
        working-directory: kubernetes/helmfile
        run: |
          helmfile -e testnet sync
      
      - name: Wait for rollout
        run: |
          kubectl rollout status statefulset/reth-sequencer -n op-stack --timeout=10m
          kubectl rollout status deployment/op-node -n op-stack --timeout=10m
          kubectl rollout status deployment/op-batcher -n op-stack --timeout=10m
          kubectl rollout status deployment/op-proposer -n op-stack --timeout=10m

  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy-kubernetes
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      
      - name: Run health checks
        env:
          RPC_URL: https://testnet-rpc.jeju.network
        run: |
          bun run scripts/health-check.ts
      
      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "‚ùå Testnet deployment failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Testnet deployment failed\nJob: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }


