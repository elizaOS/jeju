#!/usr/bin/env bun
import { $ } from "bun";
import { resolve } from "path";
import type { NetworkType } from "../../types";
import { readFileSync } from "fs";

async function main() {
  const network = (process.argv[3] || 'local') as NetworkType;
  console.log(`🚀 Generating L2 genesis for ${network}...`);
  const contractsDir = resolve(process.cwd(), "contracts");
  const deploymentsDir = resolve(contractsDir, "deployments", network);
  const l1DeploymentsPath = resolve(deploymentsDir, "l1-deployment.json");

  // In a real scenario, this file would be generated by the L1 deployment script
  const l1Deployments = JSON.parse(readFileSync(l1DeploymentsPath, "utf-8"));

  await $`cd ${contractsDir} && op-node genesis l2 \
    --deploy-config ${resolve(contractsDir, "deploy-config", `${network}.json`)} \
    --l1-deployments ${JSON.stringify(l1Deployments)} \
    --outfile.l2 ${resolve(deploymentsDir, "genesis.json")} \
    --outfile.rollup ${resolve(deploymentsDir, "rollup.json")}`;

  console.log("\n✅ L2 genesis generated successfully!");
  console.log(`   - genesis.json`);
  console.log(`   - rollup.json`);
  console.log(`   Saved to: ${deploymentsDir}`);
}

main().catch((err) => {
  console.error("\n❌ L2 genesis generation failed:", err);
  process.exit(1);
});


