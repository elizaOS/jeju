apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "subsquid.fullname" . }}-api
  labels:
    {{- include "subsquid.labels" . | nindent 4 }}
    component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "subsquid.selectorLabels" . | nindent 6 }}
      component: api
  template:
    metadata:
      labels:
        {{- include "subsquid.selectorLabels" . | nindent 8 }}
        component: api
    spec:
      serviceAccountName: {{ include "subsquid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["npx", "squid-graphql-server"]
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          env:
            {{- toYaml .Values.api.env | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}

