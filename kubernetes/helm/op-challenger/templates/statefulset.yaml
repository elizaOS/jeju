apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "op-challenger.fullname" . }}
  labels:
    {{- include "op-challenger.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "op-challenger.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "op-challenger.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "op-challenger.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "op-challenger.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-data-dir
        image: busybox:1.36
        command: ['sh', '-c', 'mkdir -p /data && chown -R 1000:1000 /data']
        volumeMounts:
        - name: data
          mountPath: /data
        securityContext:
          runAsUser: 0
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - op-challenger
        args:
        - --l1-eth-rpc={{ .Values.config.l1.rpcUrl }}
        - --rollup-rpc={{ .Values.config.rollup.rpcUrl }}
        - --l2-eth-rpc={{ .Values.config.l2.rpcUrl }}
        - --trace-type={{ .Values.config.traceType }}
        {{- if .Values.config.gameFactoryAddress }}
        - --game-factory-address={{ .Values.config.gameFactoryAddress }}
        {{- end }}
        {{- range .Values.config.gameAllowlist }}
        - --game-allowlist={{ . }}
        {{- end }}
        - --datadir={{ .Values.config.datadir }}
        - --max-concurrency={{ .Values.config.maxConcurrency }}
        - --poll-interval={{ .Values.config.pollInterval }}
        {{- if .Values.config.privateKey }}
        - --private-key={{ .Values.config.privateKey }}
        {{- else }}
        - --private-key=/secrets/private-key
        {{- end }}
        {{- if .Values.config.metrics.enabled }}
        - --metrics.enabled
        - --metrics.addr={{ .Values.config.metrics.addr }}
        - --metrics.port={{ .Values.config.metrics.port }}
        {{- end }}
        {{- if .Values.config.pprof.enabled }}
        - --pprof.enabled
        - --pprof.addr=0.0.0.0
        - --pprof.port=6060
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.config.metrics.port }}
          protocol: TCP
        {{- if .Values.config.pprof.enabled }}
        - name: pprof
          containerPort: 6060
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: data
          mountPath: {{ .Values.persistence.mountPath }}
        - name: secrets
          mountPath: /secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: {{ include "op-challenger.fullname" . }}-secrets
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.persistence.enabled }}
      volumes:
      - name: data
        emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ {{ .Values.persistence.accessMode }} ]
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}

