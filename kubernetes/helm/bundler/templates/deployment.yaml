apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bundler.fullname" . }}
  labels:
    {{- include "bundler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bundler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "bundler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bundler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - stackup-bundler
        args:
        - start
        - --mode={{ .Values.config.userOpMempool }}
        - --network={{ .Values.config.network }}
        - --rpc-url={{ .Values.config.rpcUrl }}
        - --entry-point={{ .Values.config.entryPoint }}
        - --private-key=/secrets/private-key
        - --beneficiary={{ .Values.config.beneficiary }}
        - --min-balance={{ .Values.config.minBalance }}
        - --max-batch-size={{ .Values.config.maxBatchSize }}
        - --max-ops-per-batch={{ .Values.config.maxOpsPerBatch }}
        - --port={{ .Values.config.port }}
        - --metrics-port={{ .Values.config.metricsPort }}
        {{- if .Values.config.debugMode }}
        - --debug
        {{- end }}
        {{- if .Values.config.p2p.enabled }}
        - --p2p-enabled
        - --p2p-port={{ .Values.config.p2p.port }}
        {{- range .Values.config.p2p.bootnodes }}
        - --p2p-bootnode={{ . }}
        {{- end }}
        {{- end }}
        ports:
        - name: rpc
          containerPort: {{ .Values.config.port }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.config.metricsPort }}
          protocol: TCP
        {{- if .Values.config.p2p.enabled }}
        - name: p2p
          containerPort: {{ .Values.config.p2p.port }}
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: rpc
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: rpc
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: {{ include "bundler.fullname" . }}-secrets
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

