{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "subsquid.fullname" . }}-postgres
  labels:
    {{- include "subsquid.labels" . | nindent 4 }}
    component: postgres
spec:
  serviceName: {{ include "subsquid.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      {{- include "subsquid.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "subsquid.selectorLabels" . | nindent 8 }}
        component: postgres
    spec:
      serviceAccountName: {{ include "subsquid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: subsquid-db-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: subsquid-db-secret
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          {{- with .Values.postgres.config }}
            - name: POSTGRES_MAX_CONNECTIONS
              value: {{ .maxConnections | quote }}
            - name: POSTGRES_SHARED_BUFFERS
              value: {{ .sharedBuffers | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.postgres.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
  {{- else }}
      volumes:
        - name: data
          emptyDir: {}
  {{- end }}
{{- end }}

