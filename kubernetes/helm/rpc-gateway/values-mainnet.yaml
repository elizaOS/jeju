# RPC Gateway values for mainnet
replicaCount: 3

ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    cert-manager.io/cluster-issuer: letsencrypt-prod
    alb.ingress.kubernetes.io/healthcheck-path: /health
    # Enable WAF for production DDoS protection
    alb.ingress.kubernetes.io/wafv2-acl-arn: ""  # Set via terraform output
    # AWS Shield Standard is always enabled (free)
    alb.ingress.kubernetes.io/shield-advanced-protection: "false"
    # Performance optimizations
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=false,deregistration_delay.timeout_seconds=30,load_balancing.algorithm.type=least_outstanding_requests
  hosts:
    - host: rpc.jeju.network
      paths:
        - path: /
          pathType: Prefix
    - host: ws.jeju.network
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: rpc-jeju-network-tls
      hosts:
        - rpc.jeju.network
        - ws.jeju.network

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 512Mi

backend:
  rpcService: "reth-rpc"
  rpcPort: 8545
  wsPort: 8546

# Production rate limits
rateLimit:
  enabled: true
  requestsPerSecond: 100
  requestsPerMinute: 5000
  burstSize: 200
  maxConnectionsPerIp: 10

monitoring:
  enabled: true

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - rpc-gateway
        topologyKey: kubernetes.io/hostname

