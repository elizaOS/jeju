# JejuMarket Prediction Markets Schema Extension
# Add this to the main schema.graphql

type PredictionMarket @entity {
  id: ID!                              # Oracle session ID
  sessionId: String! @unique @index
  question: String!
  liquidityB: BigInt!
  yesShares: BigInt!
  noShares: BigInt!
  totalVolume: BigInt!
  createdAt: DateTime! @index
  resolvedAt: DateTime
  outcome: Boolean
  resolved: Boolean! @index
  creator: Account
  creationTransaction: Transaction
  trades: [MarketTrade!]! @derivedFrom(field: "market")
  positions: [MarketPosition!]! @derivedFrom(field: "market")
}

type MarketTrade @entity {
  id: ID!
  market: PredictionMarket! @index
  trader: Account! @index
  outcome: Boolean!                    # true=YES, false=NO
  isBuy: Boolean!                      # true=buy, false=sell
  shares: BigInt!
  cost: BigInt!                        # Tokens spent (buy) or received (sell)
  priceAfter: BigInt!                  # Price after trade (18 decimals)
  timestamp: DateTime! @index
  transaction: Transaction!
  block: Block!
}

type MarketPosition @entity {
  id: ID!                              # market-trader
  market: PredictionMarket! @index
  trader: Account! @index
  yesShares: BigInt!
  noShares: BigInt!
  totalSpent: BigInt!
  totalReceived: BigInt!
  hasClaimed: Boolean!
  lastUpdated: DateTime!
}

type OracleGame @entity {
  id: ID!                              # Oracle session ID
  sessionId: String! @unique @index
  question: String!
  commitment: String!
  committedAt: DateTime! @index
  revealedAt: DateTime
  outcome: Boolean
  finalized: Boolean! @index
  teeQuote: String
  winners: [String!]!
  totalPayout: BigInt
  market: PredictionMarket
  commitTransaction: Transaction!
  revealTransaction: Transaction
  block: Block!
}

type MarketStats @entity {
  id: ID!                              # "daily-YYYY-MM-DD" or "market-{sessionId}"
  date: DateTime! @index
  marketCount: Int!
  totalVolume: BigInt!
  uniqueTraders: Int!
  tradeCount: Int!
  avgLiquidity: BigInt!
  resolvedMarkets: Int!
}

