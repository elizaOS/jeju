name: 'Build Test ElizaOS'

on:
  pull_request:
    paths:
      - 'packages/game/**'
      - 'packages/lander/**'
      - '.github/workflows/build-test.yml'
  push:
    branches:
      - main
    paths:
      - 'packages/game/**'
      - 'packages/lander/**'
      - '.github/workflows/build-test.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  test-lander:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Install lander dependencies
        run: |
          cd packages/lander
          bun install

      - name: Type check
        run: |
          cd packages/lander
          bun run type-check || echo "Type check not available"

      - name: Lint
        run: |
          cd packages/lander
          bun run lint || echo "Lint not available"

      - name: Build lander
        run: |
          cd packages/lander
          bun run build

      - name: Check lander build output
        run: |
          cd packages/lander
          ls -la dist/
          echo "âœ… Lander build successful"

  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    env:
      # Set CI environment variable to skip postinstall scripts
      CI: true
      GITHUB_ACTIONS: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './packages/game/src-tauri -> target'

      - name: Install dependencies (root)
        run: |
          bun install --frozen-lockfile || bun install

      - name: Install dependencies (game)
        run: |
          cd packages/game
          bun install --frozen-lockfile || bun install

      - name: Build backend without Podman
        run: |
          cd packages/game
          bun run build:backend

      - name: Build frontend
        run: |
          cd packages/game
          bun run build:frontend

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: packages/game
          args: ${{ matrix.args }}
          tauriScript: bunx tauri

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}-${{ github.sha }}
          path: |
            packages/game/src-tauri/target/*/release/bundle/
          retention-days: 7
