apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "reth.fullname" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
    mode: {{ .Values.mode }}
spec:
  serviceName: {{ include "reth.fullname" . }}
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "reth.selectorLabels" . | nindent 6 }}
      mode: {{ .Values.mode }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "reth.selectorLabels" . | nindent 8 }}
        mode: {{ .Values.mode }}
    spec:
      serviceAccountName: {{ include "reth.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-data-dir
        image: busybox:1.36
        command: ['sh', '-c', 'mkdir -p /data && chown -R 1000:1000 /data']
        volumeMounts:
        - name: data
          mountPath: /data
        securityContext:
          runAsUser: 0
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - op-reth
        - node
        args:
        - --chain={{ .Values.config.chain }}
        - --datadir={{ .Values.config.datadir }}
        - --http
        - --http.addr={{ .Values.config.http.addr }}
        - --http.port={{ .Values.config.http.port }}
        - --http.api={{ .Values.config.http.api }}
        - --http.corsdomain={{ .Values.config.http.corsdomain }}
        - --ws
        - --ws.addr={{ .Values.config.ws.addr }}
        - --ws.port={{ .Values.config.ws.port }}
        - --ws.api={{ .Values.config.ws.api }}
        - --ws.origins={{ .Values.config.ws.origins }}
        - --authrpc.addr={{ .Values.config.authrpc.addr }}
        - --authrpc.port={{ .Values.config.authrpc.port }}
        - --authrpc.jwtsecret={{ .Values.config.authrpc.jwtsecret }}
        - --port={{ .Values.config.p2p.port }}
        - --max-outbound-peers={{ .Values.config.p2p.maxPeers }}
        - --metrics={{ .Values.config.metrics.addr }}:{{ .Values.config.metrics.port }}
        {{- if eq .Values.mode "sequencer" }}
        - --rollup.sequencer-http={{ .Values.config.rollup.sequencerHttp }}
        - --rollup.disable-tx-pool-gossip={{ .Values.config.rollup.disableTxPoolGossip }}
        {{- end }}
        {{- if eq .Values.mode "archive" }}
        - --full
        {{- else }}
        - --pruning={{ .Values.config.pruning.full }}
        {{- end }}
        - --log.stdout.format=json
        ports:
        - name: http
          containerPort: {{ .Values.config.http.port }}
          protocol: TCP
        - name: ws
          containerPort: {{ .Values.config.ws.port }}
          protocol: TCP
        - name: engine
          containerPort: {{ .Values.config.authrpc.port }}
          protocol: TCP
        - name: p2p
          containerPort: {{ .Values.config.p2p.port }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.config.metrics.port }}
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              curl -sf -X POST http://localhost:{{ .Values.config.http.port }} \
                -H "Content-Type: application/json" \
                --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' | grep -q result
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              curl -sf -X POST http://localhost:{{ .Values.config.http.port }} \
                -H "Content-Type: application/json" \
                --data '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}' | grep -q result
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- if eq .Values.mode "sequencer" }}
          {{- toYaml .Values.resources.sequencer | nindent 12 }}
          {{- else if eq .Values.mode "archive" }}
          {{- toYaml .Values.resources.archive | nindent 12 }}
          {{- else }}
          {{- toYaml .Values.resources.rpc | nindent 12 }}
          {{- end }}
        volumeMounts:
        - name: data
          mountPath: {{ .Values.persistence.mountPath }}
        - name: secrets
          mountPath: /secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: {{ include "reth.fullname" . }}-secrets
      {{- $nodeSelector := .Values.nodeSelector }}
      {{- if hasKey .Values.nodeSelector .Values.mode }}
      {{- $nodeSelector = index .Values.nodeSelector .Values.mode }}
      {{- end }}
      {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- $tolerations := .Values.tolerations }}
      {{- if hasKey .Values.tolerations .Values.mode }}
      {{- $tolerations = index .Values.tolerations .Values.mode }}
      {{- end }}
      {{- with $tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ {{ .Values.persistence.accessMode }} ]
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ if eq .Values.mode "sequencer" }}{{ .Values.persistence.sequencerSize }}{{ else if eq .Values.mode "archive" }}{{ .Values.persistence.archiveSize }}{{ else }}{{ .Values.persistence.rpcSize }}{{ end }}
  {{- end }}


