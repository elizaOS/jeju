version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: crucible-db
    environment:
      POSTGRES_DB: crucible
      POSTGRES_USER: crucible
      POSTGRES_PASSWORD: crucible_pass
    volumes:
      - crucible-db:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Expose on 5433 to avoid conflict with host Postgres
    networks:
      - crucible-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crucible"]
      interval: 10s
      timeout: 5s
      retries: 5

  crucible:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: jeju-crucible
    depends_on:
      postgres:
        condition: service_healthy
      rpc-check:
        condition: service_completed_successfully
  
  # Health check service to verify localnet RPC is accessible
  rpc-check:
    image: curlimages/curl:latest
    container_name: crucible-rpc-check
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      sh -c "
      echo 'üîç Checking Jeju localnet RPC connectivity...';
      max_attempts=30;
      attempt=0;
      while [ $$attempt -lt $$max_attempts ]; do
        if curl -s -X POST http://host.docker.internal:9545 \
          -H 'Content-Type: application/json' \
          -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' > /dev/null; then
          echo '‚úÖ Localnet RPC is accessible at http://host.docker.internal:9545';
          exit 0;
        fi;
        attempt=$$((attempt + 1));
        echo \"Attempt $$attempt/$$max_attempts: Localnet not ready, waiting 2s...\";
        sleep 2;
      done;
      echo '‚ùå ERROR: Could not connect to localnet after 60 seconds';
      echo 'Please ensure localnet is running: bun run dev (from repo root)';
      exit 1;
      "
    networks:
      - crucible-net
    environment:
      # Network Configuration
      - NETWORK=localnet
      - JEJU_L2_RPC=http://host.docker.internal:9545
      - JEJU_L1_RPC=http://host.docker.internal:8545
      - CHAIN_ID=1337
      
      # Database
      - DATABASE_URL=postgresql://crucible:crucible_pass@postgres:5432/crucible
      
      # Guardian Recovery
      - GUARDIAN_ADDRESS_LOCALNET=${GUARDIAN_ADDRESS_LOCALNET:-0x71562b71999873DB5b286dF957af199Ec94617F7}
      - GUARDIAN_ADDRESS_TESTNET=${GUARDIAN_ADDRESS_TESTNET}
      
      # AI Provider
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - MODEL_PROVIDER=${MODEL_PROVIDER:-openai}
      
      # Server Configuration
      - SERVER_PORT=7777
      - AUTO_START_AGENTS=${AUTO_START_AGENTS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_DASHBOARD=${ENABLE_DASHBOARD:-true}
      
      # Agent Wallets (Anvil test accounts)
      - HACKER_WALLET_1=${HACKER_WALLET_1:-0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80}
      - HACKER_WALLET_2=${HACKER_WALLET_2:-0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d}
      - SCAMMER_WALLET_1=${SCAMMER_WALLET_1:-0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a}
      - SCAMMER_WALLET_2=${SCAMMER_WALLET_2:-0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6}
      - CITIZEN_WALLET_1=${CITIZEN_WALLET_1:-0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a}
      - CITIZEN_WALLET_2=${CITIZEN_WALLET_2:-0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba}
      - CITIZEN_WALLET_3=${CITIZEN_WALLET_3:-0x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e}
      - GUARDIAN_WALLET_1=${GUARDIAN_WALLET_1:-0x4bbbf85ce3377467afe5d46f804f221813b2bb87f24d81f60f1fcdbf7cbf4356}
      - GUARDIAN_WALLET_2=${GUARDIAN_WALLET_2:-0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97}
      - GUARDIAN_WALLET_3=${GUARDIAN_WALLET_3:-0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6}
      
      # Deployed Contract Addresses (update from localnet-addresses.json)
      - IDENTITY_REGISTRY=${IDENTITY_REGISTRY:-0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0}
      - REPUTATION_REGISTRY=${REPUTATION_REGISTRY:-0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9}
      - VALIDATION_REGISTRY=${VALIDATION_REGISTRY:-0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9}
      - SERVICE_REGISTRY=${SERVICE_REGISTRY:-0x5FC8d32690cc91D4c39d9d3abcBD16989F875707}
      - CREDIT_MANAGER=${CREDIT_MANAGER:-0x0165878A594ca255338adfa4d48449f69242Eb8F}
      - ELIZA_TOKEN=${ELIZA_TOKEN:-0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512}
      - UNISWAP_POOL_MANAGER=${UNISWAP_POOL_MANAGER:-0x5FbDB2315678afecb367f032d93F642f64180aa3}
      
      # Attack Configuration
      - AUTO_RECOVER_THRESHOLD=${AUTO_RECOVER_THRESHOLD:-0.1}
      - RECOVERY_CHECK_INTERVAL=${RECOVERY_CHECK_INTERVAL:-10000}
    
    ports:
      - "7777:7777"   # ElizaOS API server
      - "5010:5010"   # Dashboard (if enabled)
    
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    volumes:
      - ../characters:/app/characters:ro
      - crucible-data:/app/data
      - crucible-logs:/app/logs
    
    networks:
      - crucible-net
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777/api/server/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

volumes:
  crucible-db:
    driver: local
  crucible-data:
    driver: local
  crucible-logs:
    driver: local

networks:
  crucible-net:
    driver: bridge
    name: jeju-crucible-network

