name: Master Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  CI: true

jobs:
  # Fast checks first
  config-and-types:
    name: Configuration & Type Checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Validate configuration
        run: bun run config:validate

      - name: TypeScript type check
        run: bun run typecheck

  # Smart contract tests
  contracts:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Forge build
        working-directory: contracts
        run: forge build

      - name: Run Forge tests
        working-directory: contracts
        run: forge test -vv

      - name: Generate gas report
        working-directory: contracts
        run: forge test --gas-report

      - name: Generate coverage
        working-directory: contracts
        run: forge coverage --report summary

  # TypeScript unit tests
  typescript-tests:
    name: TypeScript Unit Tests
    runs-on: ubuntu-latest
    needs: [config-and-types]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run config tests
        run: bun test config/index.test.ts

      - name: Run shared utilities tests
        run: bun test scripts/shared/

      - name: Run integration tests
        run: bun test tests/integration/ || true

  # Infrastructure validation
  infrastructure:
    name: Infrastructure Validation
    runs-on: ubuntu-latest
    needs: [config-and-types]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Install dependencies
        run: bun install

      - name: Validate Helm charts
        run: bun run test:helm

  # Documentation coverage
  documentation:
    name: Documentation Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check documentation coverage
        run: bun run test:docs

  # Specialized tests
  specialized:
    name: Specialized System Tests
    runs-on: ubuntu-latest
    needs: [contracts, typescript-tests]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install dependencies
        run: bun install

      - name: Build contracts
        working-directory: contracts
        run: forge build

      - name: Test node rewards system
        run: bun run scripts/test-complete-node-system.ts || true

      - name: Test oracle prices
        run: bun run scripts/test-oracle-prices.ts || true
        env:
          BASE_RPC_URL: https://mainnet.base.org

  # Final summary job
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [config-and-types, contracts, typescript-tests, infrastructure, documentation, specialized]
    if: always()
    steps:
      - name: Check test results
        run: |
          echo "==================================="
          echo "Test Summary"
          echo "==================================="
          echo "✅ Configuration & Types: ${{ needs.config-and-types.result }}"
          echo "✅ Smart Contracts: ${{ needs.contracts.result }}"
          echo "✅ TypeScript Tests: ${{ needs.typescript-tests.result }}"
          echo "✅ Infrastructure: ${{ needs.infrastructure.result }}"
          echo "✅ Documentation: ${{ needs.documentation.result }}"
          echo "✅ Specialized Tests: ${{ needs.specialized.result }}"
          echo "==================================="
          
          if [[ "${{ needs.config-and-types.result }}" == "failure" || \
                "${{ needs.contracts.result }}" == "failure" || \
                "${{ needs.typescript-tests.result }}" == "failure" ]]; then
            echo "❌ Critical tests failed"
            exit 1
          fi
          
          echo "✅ All critical tests passed!"


