name: 'Release Universal macOS Build'

on:
  push:
    tags:
      - 'v*-universal' # Special tags for universal builds
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (universal)'
        required: true
        default: 'v0.1.0-universal'

jobs:
  build-universal-macos:
    permissions:
      contents: write
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './packages/game/src-tauri -> target'

      - name: Install dependencies
        run: |
          bun install --frozen-lockfile || bun install
          cd packages/game
          bun install --frozen-lockfile || bun install

      - name: Build frontend
        run: |
          cd packages/game
          bun run build:frontend || bun run build

      - name: Build universal binary
        run: |
          cd packages/game
          bun run tauri:build:universal || bunx tauri build --target universal-apple-darwin

      - name: Get version
        run: echo "PACKAGE_VERSION=$(node -pe "require('./packages/game/package.json').version")" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = 'v${{ env.PACKAGE_VERSION }}-universal';

            try {
              const release = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tag,
                name: 'ElizaOS Game v${{ env.PACKAGE_VERSION }} Universal',
                body: 'Universal macOS build for both Intel and Apple Silicon Macs.\n\nThis build contains both x86_64 and aarch64 architectures in a single binary.',
                draft: false,
                prerelease: false
              });
              
              // Set outputs for later steps
              core.setOutput('upload_url', release.data.upload_url);
              core.setOutput('release_id', release.data.id);
            } catch (error) {
              if (error.status === 422) {
                // Release already exists, get it
                const releases = await github.rest.repos.listReleases({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });
                const existingRelease = releases.data.find(r => r.tag_name === tag);
                if (existingRelease) {
                  core.setOutput('upload_url', existingRelease.upload_url);
                  core.setOutput('release_id', existingRelease.id);
                  console.log(`Using existing release: ${existingRelease.name}`);
                } else {
                  throw error;
                }
              } else {
                throw error;
              }
            }

      - name: Upload DMG
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const dmgPath = path.join('packages/game/src-tauri/target/universal-apple-darwin/release/bundle/dmg', 
              `ElizaOS Terminal_${{ env.PACKAGE_VERSION }}_universal.dmg`);
            const dmgData = fs.readFileSync(dmgPath);

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create_release.outputs.release_id }},
              name: 'ElizaOS-Terminal-${{ env.PACKAGE_VERSION }}-universal.dmg',
              data: dmgData,
            });

      - name: Upload App Bundle
        run: |
          cd packages/game/src-tauri/target/universal-apple-darwin/release/bundle/macos/
          tar -czf "ElizaOS-Terminal-${{ env.PACKAGE_VERSION }}-universal.app.tar.gz" "ElizaOS Terminal.app"

      - name: Upload App Bundle Asset
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const tarPath = path.join('packages/game/src-tauri/target/universal-apple-darwin/release/bundle/macos',
              `ElizaOS-Terminal-${{ env.PACKAGE_VERSION }}-universal.app.tar.gz`);
            const tarData = fs.readFileSync(tarPath);

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create_release.outputs.release_id }},
              name: 'ElizaOS-Terminal-${{ env.PACKAGE_VERSION }}-universal.app.tar.gz',
              data: tarData,
            });
